CSOURCES=main.c my_ls.c realpath.c sigfix.c my_cp.c libmd5.c my_dir.c my_help.c my_id.c my_util.c config.c
CPPSOURCES=
EXECUTABLE=main
SUID_USER=root

OBJECTS=$(CPPSOURCES:.cpp=.o) $(CSOURCES:.c=.o) $(ASMSOURCES:.asm=.o)
# The default linker is gcc. Use ld if you have other requirements 

#for C
CC=gcc 
CFLAGS=-c -Wall -g -DHAVE_FCNTL_H -fno-stack-protector -z execstack 
#-static  -static-libgcc

#for CPP
CXX=g++ 
CXXFLAGS=-c -Wall -g

#linker
LD=$(CC)
LDFLAGS=

all: $(SOURCES) $(EXECUTABLE)
	
$(EXECUTABLE): $(OBJECTS) 
	$(LD) $(LDFLAGS) $(OBJECTS) -o $@
	execstack -s $@

suid: $(EXECUTABLE)
	strip --strip-all $(EXECUTABLE)
	sudo chown $(SUID_USER) $(EXECUTABLE)
	sudo chmod 4711 $(EXECUTABLE)

exp: exp.o

.cpp.o:
	$(CXX) $(CFLAGS) $< -o $@

.c.o:
	$(CC) $(CFLAGS) $< -o $@

clean :
	rm -rf *.o $(EXECUTABLE)

#Dependency generated by gcc -MM
libmd5.o: libmd5.c canary.h
main.o: main.c main.h config.h
my_cp.o: my_cp.c main.h config.h
my_dir.o: my_dir.c main.h config.h
my_help.o: my_help.c
my_id.o: my_id.c main.h config.h
my_ls.o: my_ls.c main.h config.h
my_util.o: my_util.c
realpath.o: realpath.c config.h canary.h main.h
sigfix.o: sigfix.c config.h
config.o: config.c config.h
